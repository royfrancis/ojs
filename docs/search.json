[
  {
    "objectID": "slides/ojs/index.html#building-blocks",
    "href": "slides/ojs/index.html#building-blocks",
    "title": "Observable",
    "section": "Building blocks",
    "text": "Building blocks\n\nDocumentation"
  },
  {
    "objectID": "slides/ojs/index.html#ojs-plot",
    "href": "slides/ojs/index.html#ojs-plot",
    "title": "Observable",
    "section": "OJS Plot",
    "text": "OJS Plot\n\nOJS Plots"
  },
  {
    "objectID": "slides/ojs/index.html#notebook",
    "href": "slides/ojs/index.html#notebook",
    "title": "Observable",
    "section": "Notebook",
    "text": "Notebook\n\nNotebook ObservableHQ"
  },
  {
    "objectID": "slides/ojs/index.html#notebook-in-the-cloud",
    "href": "slides/ojs/index.html#notebook-in-the-cloud",
    "title": "Observable",
    "section": "Notebook in the cloud",
    "text": "Notebook in the cloud\n\n\n\n\n\nFast, reactive and interactive\nOnly one line per chunk\nAdding and removing chunks is a pain\n\nLearning observable\n\n\nDemo notebooks and interactive tables\nhttps://observablehq.com/d/adbe23ce2f64292d"
  },
  {
    "objectID": "slides/ojs/index.html#ojs-in-quarto",
    "href": "slides/ojs/index.html#ojs-in-quarto",
    "title": "Observable",
    "section": "OJS in Quarto",
    "text": "OJS in Quarto\n\nCore libraries (stdlib, inputs, plot) are included in Quarto\nUse ojs chunks\n\n```{ojs}\n\n```\n\n\nImport other libraries as needed\n\nimport {aq, op} from \"@uwdata/arquero\"\n\n\n\nOJS does not work when opening a static local HTML file in the browser. It requires a live server. For local viewing, use quarto preview, python -m http.server etc. It will just work when hosted on a server/hosting service such as Github pages etc.\n\nOJS in Quarto"
  },
  {
    "objectID": "slides/ojs/index.html#widgets",
    "href": "slides/ojs/index.html#widgets",
    "title": "Observable",
    "section": "Widgets",
    "text": "Widgets\n\ndata_hdi = [\n  {\n    name: \"Switzerland\",\n    continent: \"Europe\",\n    hdi: \"0.962\"\n  },\n  {\n    name: \"Norway\",\n    continent: \"Europe\",\n    hdi: \"0.961\"\n  },\n  {\n    name: \"Iceland\",\n    continent: \"Europe\",\n    hdi: \"0.959\"\n  },\n  {\n    name: \"Hong Kong\",\n    continent: \"Asia\",\n    hdi: \"0.952\"\n  },\n  {\n    name: \"Australia\",\n    continent: \"Oceania\",\n    hdi: \"0.951\"\n  },\n  {\n    name: \"Denmark\",\n    continent: \"Europe\",\n    hdi: \"0.948\"\n  },\n  {\n    name: \"Sweden\",\n    continent: \"Europe\",\n    hdi: \"0.947\"\n  },\n  {\n    name: \"Ireland\",\n    continent: \"Europe\",\n    hdi: \"0.945\"\n  },\n  {\n    name: \"Germany\",\n    continent: \"Europe\",\n    hdi: \"0.942\"\n  },\n  {\n    name: \"Netherlands\",\n    continent: \"Europe\",\n    hdi: \"0.941\"\n  },\n  {\n    name: \"Finland\",\n    continent: \"Europe\",\n    hdi: \"0.940\"\n  },\n  {\n    name: \"Singapore\",\n    continent: \"Asia\",\n    hdi: \"0.939\"\n  },\n  {\n    name: \"Belgium\",\n    continent: \"Europe\",\n    hdi: \"0.937\"\n  },\n  {\n    name: \"New Zealand\",\n    continent: \"Oceania\",\n    hdi: \"0.937\"\n  },\n  {\n    name: \"Canada\",\n    continent: \"North America\",\n    hdi: \"0.936\"\n  }\n]\n\n\n\n\n\n\n\n\n\nviewof table_a = Inputs.table(data_hdi)\n\n\n\n\n\n\n\n\nviewof name = Inputs.text({label: \"Name\", placeholder: \"What’s your name?\"})\n\n\n\n\n\n\nYour input is \n\n\n\n\nviewof hdi = Inputs.range([0.90, 1.00], {value: 0.98, step: 0.01, label: \"HDI\"})\n\n\n\n\n\n\nSelected value is \n\n\n\nviewof clicks = Inputs.button(\"Click me\")\n\n\n\n\n\n\nNumber of clicks: \n\n\n\nviewof dflavors = Inputs.select([\"salty\", \"sweet\", \"bitter\", \"sour\", \"umami\"], {label: \"Flavors\", multiple: false})\n\n\n\n\n\n\nSelected item: \n\n\nOJS Inputs"
  },
  {
    "objectID": "slides/ojs/index.html#ojs-and-r",
    "href": "slides/ojs/index.html#ojs-and-r",
    "title": "Observable",
    "section": "OJS and R",
    "text": "OJS and R\nExchange data between R and OJS\n\n\n\nR code\n\nirism &lt;- iris\ncolnames(irism) &lt;- gsub(\"[.]\", \"_\", tolower(colnames(irism)))\nojs_define(ojsd = irism)\n\n\nTranspose JS object.\n\nojsdata = transpose(ojsd)\n\n\n\n\n\n\nRaw JSON object.\n\nojsdata"
  },
  {
    "objectID": "slides/ojs/index.html#filtering",
    "href": "slides/ojs/index.html#filtering",
    "title": "Observable",
    "section": "Filtering",
    "text": "Filtering\n\nviewof grp = Inputs.select([\"setosa\", \"versicolor\", \"virginica\"], {value: [\"setosa\"], multiple: false, label: \"Species\"})\n\n\n\n\n\n\n\nojsdata_filtered = ojsdata.filter(d =&gt; d.species.includes(grp))\nviewof filtered_table = Inputs.table(ojsdata_filtered)"
  },
  {
    "objectID": "slides/ojs/index.html#plotting",
    "href": "slides/ojs/index.html#plotting",
    "title": "Observable",
    "section": "Plotting",
    "text": "Plotting\n\n\n\nviewof x = Inputs.select(Object.keys(ojsdata[0]), {value: \"sepal_length\", multiple: false, label: \"X axis\"})\nviewof y = Inputs.select(Object.keys(ojsdata[0]), {value: \"sepal_width\", multiple: false, label: \"Y axis\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlot.plot({\n  marks: [\n    Plot.dot(ojsdata, {\n      x: x,\n      y: y,\n      fill: \"species\",\n      title: (d) =&gt;\n        `${d.species} \\n Petal length: ${d.petal_length} \\n Sepal length: ${d.sepal_length}`\n    })\n  ],\n  grid: true\n})\n\n\n\n\n\n\n\n\nPlot.plot({\n  marks: [\n    Plot.dot(ojsdata, {\n      x: x,\n      y: y,\n      fill: \"species\",\n      title: (d) =&gt;\n        `${d.species} \\n Petal length: ${d.petal_length} \\n Sepal length: ${d.sepal_length}`\n    })\n  ],\n  grid: true\n})"
  },
  {
    "objectID": "slides/ojs/index.html#arquero",
    "href": "slides/ojs/index.html#arquero",
    "title": "Observable",
    "section": "Arquero",
    "text": "Arquero\n\n\n\nimport { aq, op } from '@uwdata/arquero'\nojsdata_aq = aq.from(ojsdata)\n\nojsdata_aq\n  .groupby('species')\n  .filter(p =&gt; p.sepal_length &gt; 5)\n  .rollup({\n    count: op.count(),\n    avg_mass: op.average('sepal_length')\n   })\n  .view()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { aq, op } from '@uwdata/arquero'\nojsdata_aq = aq.from(ojsdata)\n\nojsdata_aq\n  .groupby('species')\n  .filter(p =&gt; p.sepal_length &gt; 5)\n  .rollup({\n    count: op.count(),\n    avg_mass: op.average('sepal_length')\n   })\n  .view()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroducing Arquero"
  },
  {
    "objectID": "slides/ojs/index.html#learning",
    "href": "slides/ojs/index.html#learning",
    "title": "Observable",
    "section": "Learning",
    "text": "Learning\n\n\nLearning Observable\nPlot documentation"
  },
  {
    "objectID": "slides/ojs/index.html#summary",
    "href": "slides/ojs/index.html#summary",
    "title": "Observable",
    "section": "Summary",
    "text": "Summary\nObservable: Javascript library for data visualization\n\n\n Reactive runtime\n Interactive visualization\n Open source\n Hosted notebooks at observablehq\n\n Javascript and JSON format\n Code does not necessarily run top to bottom\n Pages need to be served\n Large data sizes\n Saving as static images\n Upstream dependencies and stability"
  },
  {
    "objectID": "slides/ojs/index.html#section",
    "href": "slides/ojs/index.html#section",
    "title": "Observable",
    "section": "",
    "text": "Thank you!\nQuestions?\n2025 • Roy Francis"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "OJS Slides"
  },
  {
    "objectID": "slides/index.html",
    "href": "slides/index.html",
    "title": "Slides",
    "section": "",
    "text": "Observable\n\n\n\nRoy Francis\n\n\n\n\n\n\n\n\nNo matching items"
  }
]